# Generated by Django 4.2.7 on 2025-09-15 19:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationQuestion',
            fields=[
                ('application_question_id', models.AutoField(primary_key=True, serialize=False)),
                ('custom_question', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'application_question',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('attachment_id', models.AutoField(primary_key=True, serialize=False)),
                ('attachment_name', models.TextField(blank=True, null=True)),
                ('output_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'attachment',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AttachmentType',
            fields=[
                ('attachment_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('attachment_type_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'attachment_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Broker',
            fields=[
                ('broker_id', models.AutoField(primary_key=True, serialize=False)),
                ('broker_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'broker',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cloud',
            fields=[
                ('cloud_id', models.AutoField(primary_key=True, serialize=False)),
                ('cloud_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cloud',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('company_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'company',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cover',
            fields=[
                ('cover_id', models.AutoField(primary_key=True, serialize=False)),
                ('cover_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cover',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Coverage',
            fields=[
                ('coverage_id', models.AutoField(primary_key=True, serialize=False)),
                ('coverage_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'coverage',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DjangoprojectItem',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'DjangoProject_item',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('document_id', models.AutoField(primary_key=True, serialize=False)),
                ('document_name', models.TextField(blank=True, null=True)),
                ('document_number', models.TextField(blank=True, null=True)),
                ('default_document', models.BooleanField(blank=True, null=True)),
                ('document_added', models.DateTimeField(blank=True, null=True)),
                ('document_expiration', models.DateTimeField(blank=True, null=True)),
                ('document_prior_version', models.IntegerField(blank=True, null=True)),
                ('document_code', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'document',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('email_log_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.IntegerField(blank=True, null=True)),
                ('sent_time', models.TimeField(blank=True, null=True)),
                ('subject', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'email_log',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeeContact',
            fields=[
                ('employee_id', models.AutoField(primary_key=True, serialize=False)),
                ('employee_name_first', models.TextField(blank=True, null=True)),
                ('employee_name_last', models.TextField(blank=True, null=True)),
                ('employee_email', models.TextField(blank=True, null=True)),
                ('employee_name_combined', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'employee_contact',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeeFunction',
            fields=[
                ('employee_function_id', models.AutoField(primary_key=True, serialize=False)),
                ('employee_function', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'employee_function',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FlowOrigin',
            fields=[
                ('flow_origin_id', models.AutoField(primary_key=True, serialize=False)),
                ('flow_origin_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'flow_origin',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GenerationJob',
            fields=[
                ('generation_job_id', models.AutoField(primary_key=True, serialize=False)),
                ('generator_model_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('data_seed_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'generation_job',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GenerationLog',
            fields=[
                ('output_id', models.AutoField(primary_key=True, serialize=False)),
                ('model_code', models.TextField(blank=True, null=True)),
                ('output_file_name', models.TextField(blank=True, null=True)),
                ('product', models.TextField(blank=True, null=True)),
                ('output_id_2', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'generation_log',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GenerationModel',
            fields=[
                ('generation_model_id', models.AutoField(primary_key=True, serialize=False)),
                ('generation_model_name', models.TextField(blank=True, null=True)),
                ('python_exe_file', models.TextField(blank=True, null=True)),
                ('python_file_path', models.TextField(blank=True, null=True)),
                ('jupyter_file_path', models.TextField(blank=True, null=True)),
                ('model_filename', models.TextField(blank=True, null=True)),
                ('model_code', models.TextField(blank=True, null=True)),
                ('py_file', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'generation_model',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='InputOutput',
            fields=[
                ('input_output_id', models.AutoField(primary_key=True, serialize=False)),
                ('input_output_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'input_output',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Limits',
            fields=[
                ('limits_id', models.AutoField(primary_key=True, serialize=False)),
                ('limit_text', models.TextField(blank=True, null=True)),
                ('limit_pc_number', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('limit_ag_number', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cover', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.cover')),
            ],
            options={
                'db_table': 'limits',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Options',
            fields=[
                ('options_id', models.AutoField(primary_key=True, serialize=False)),
                ('option_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'options',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('orders_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_created', models.DateTimeField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.company')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.employeecontact')),
                ('flow_origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.floworigin')),
            ],
            options={
                'db_table': 'orders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('paper_id', models.AutoField(primary_key=True, serialize=False)),
                ('paper_name', models.TextField(blank=True, null=True)),
                ('am_best_rating', models.TextField(blank=True, null=True)),
                ('am_best_financial_size', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'paper',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('parameter_id', models.AutoField(primary_key=True, serialize=False)),
                ('parameter_name', models.TextField(blank=True, null=True)),
                ('parameter_type_id', models.IntegerField(blank=True, null=True)),
                ('parameter_docs', models.TextField(blank=True, null=True)),
                ('parameter_quote', models.BooleanField(blank=True, null=True)),
                ('parameter_binder', models.BooleanField(blank=True, null=True)),
                ('parameter_policy', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'parameter',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ParameterDoc',
            fields=[
                ('parameter_doc_id', models.AutoField(primary_key=True, serialize=False)),
                ('parameter_doc_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'parameter_doc',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ParameterType',
            fields=[
                ('parameter_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('parameter_type_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'parameter_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_name', models.TextField(blank=True, null=True)),
                ('venture_id', models.IntegerField(blank=True, null=True)),
                ('coverage_id', models.IntegerField(blank=True, null=True)),
                ('product_code', models.TextField(blank=True, null=True)),
                ('product_prefix', models.TextField(blank=True, null=True)),
                ('documents_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('products_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_name', models.TextField(blank=True, null=True)),
                ('product_code', models.TextField(blank=True, null=True)),
                ('product_prefix', models.TextField(blank=True, null=True)),
                ('documents_name', models.TextField(blank=True, null=True)),
                ('coverage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.coverage')),
            ],
            options={
                'db_table': 'products',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('stage_id', models.AutoField(primary_key=True, serialize=False)),
                ('stage_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stage',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Sublimit',
            fields=[
                ('sublimit_id', models.AutoField(primary_key=True, serialize=False)),
                ('sublimit_name', models.TextField(blank=True, null=True)),
                ('sublimit_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('orders', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.orders')),
                ('products', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.products')),
            ],
            options={
                'db_table': 'sublimit',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False)),
                ('task_name', models.TextField(blank=True, null=True)),
                ('task_description', models.TextField(blank=True, null=True)),
                ('task_display', models.TextField(blank=True, null=True)),
                ('subroutine_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'task',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TrainingModel',
            fields=[
                ('training_model_id', models.AutoField(primary_key=True, serialize=False)),
                ('model_name', models.TextField(blank=True, null=True)),
                ('python_exe_file', models.TextField(blank=True, null=True)),
                ('python_file_path', models.TextField(blank=True, null=True)),
                ('jupyter_file_path', models.TextField(blank=True, null=True)),
                ('model_filename', models.TextField(blank=True, null=True)),
                ('model_code', models.TextField(blank=True, null=True)),
                ('py_file', models.TextField(blank=True, null=True)),
                ('pickle_dump', models.TextField(blank=True, null=True)),
                ('inference_py_file', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'training_model',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UlProgram',
            fields=[
                ('ul_program_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.IntegerField(blank=True, null=True)),
                ('paper_id', models.IntegerField(blank=True, null=True)),
                ('limit_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ul_program',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Venture',
            fields=[
                ('venture_id', models.AutoField(primary_key=True, serialize=False)),
                ('venture_name', models.TextField(blank=True, null=True)),
                ('venture_address_1', models.TextField(blank=True, null=True)),
                ('venture_address_2', models.TextField(blank=True, null=True)),
                ('venture_city', models.TextField(blank=True, null=True)),
                ('venture_state', models.TextField(blank=True, null=True)),
                ('venture_zip', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'venture',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('workflow_id', models.AutoField(primary_key=True, serialize=False)),
                ('workflow_name', models.TextField(blank=True, null=True)),
                ('workflow_type', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'workflow',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WorkflowType',
            fields=[
                ('workflow_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('workflow_type_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'workflow_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WorkflowStandard',
            fields=[
                ('workflow_standard_id', models.AutoField(primary_key=True, serialize=False)),
                ('workflow_type', models.TextField(blank=True, null=True)),
                ('stage_id', models.IntegerField(blank=True, null=True)),
                ('next_stage_id', models.IntegerField(blank=True, null=True)),
                ('workflow_sequence', models.TextField(blank=True, null=True)),
                ('man_auto', models.IntegerField(blank=True, null=True)),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.task')),
            ],
            options={
                'db_table': 'workflow_standard',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WorkflowDetail',
            fields=[
                ('workflow_detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('stage_id', models.IntegerField(blank=True, null=True)),
                ('workflow_sequence', models.IntegerField(blank=True, null=True)),
                ('man_auto', models.BooleanField(blank=True, null=True)),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.task')),
                ('workflow', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.workflow')),
            ],
            options={
                'db_table': 'workflow_detail',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TrainingJob',
            fields=[
                ('training_job_id', models.AutoField(primary_key=True, serialize=False)),
                ('data_set_id', models.TextField(blank=True, null=True)),
                ('pickle_file_name', models.TextField(blank=True, null=True)),
                ('products', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.products')),
                ('training_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.trainingmodel')),
            ],
            options={
                'db_table': 'training_job',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SublimitDetail',
            fields=[
                ('sublimit_detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('orders', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.orders')),
                ('sublimit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.sublimit')),
            ],
            options={
                'db_table': 'sublimit_detail',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Retention',
            fields=[
                ('retention_id', models.AutoField(primary_key=True, serialize=False)),
                ('cover_id', models.IntegerField(blank=True, null=True)),
                ('retention_text', models.TextField(blank=True, null=True)),
                ('retention_pc_number', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('retention_ag_number', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('products', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.products')),
            ],
            options={
                'db_table': 'retention',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='products',
            name='venture',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.venture'),
        ),
        migrations.CreateModel(
            name='ParametersStandard',
            fields=[
                ('parameters_standard_id', models.AutoField(primary_key=True, serialize=False)),
                ('parameter_map_seq', models.IntegerField(blank=True, null=True)),
                ('coverage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.coverage')),
                ('parameter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.parameter')),
            ],
            options={
                'db_table': 'parameters_standard',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ParameterMap',
            fields=[
                ('parameter_map_id', models.AutoField(primary_key=True, serialize=False)),
                ('console_element', models.BooleanField(blank=True, null=True)),
                ('quote_item', models.BooleanField(blank=True, null=True)),
                ('binder_item', models.BooleanField(blank=True, null=True)),
                ('policy_item', models.BooleanField(blank=True, null=True)),
                ('parameter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.parameter')),
                ('products', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.products')),
            ],
            options={
                'db_table': 'parameter_map',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PaperDetail',
            fields=[
                ('paper_detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('paper_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('paper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.paper')),
                ('products', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.products')),
            ],
            options={
                'db_table': 'paper_detail',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='orders',
            name='products',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.products'),
        ),
        migrations.AddField(
            model_name='orders',
            name='stage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.stage'),
        ),
        migrations.AddField(
            model_name='orders',
            name='venture',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.venture'),
        ),
        migrations.AddField(
            model_name='orders',
            name='workflow',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.workflow'),
        ),
        migrations.AddField(
            model_name='orders',
            name='workflow_detail',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.workflowdetail'),
        ),
        migrations.CreateModel(
            name='OrderOption',
            fields=[
                ('order_option_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_option_include', models.BooleanField(blank=True, null=True)),
                ('premium', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bound', models.BooleanField(blank=True, null=True)),
                ('cover', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.cover')),
                ('limits', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.limits')),
                ('options', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.options')),
                ('orders', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.orders')),
                ('retention', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.retention')),
            ],
            options={
                'db_table': 'order_option',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OrderDataVert',
            fields=[
                ('order_date_vert_id', models.AutoField(primary_key=True, serialize=False)),
                ('vert_value', models.TextField(blank=True, null=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.orders')),
                ('parameter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.parameter')),
                ('parameter_map', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.parametermap')),
            ],
            options={
                'db_table': 'order_data_vert',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OrderData',
            fields=[
                ('order_data_id', models.AutoField(primary_key=True, serialize=False)),
                ('employee_count', models.TextField(blank=True, null=True)),
                ('orders', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.orders')),
            ],
            options={
                'db_table': 'order_data',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ModelParameter',
            fields=[
                ('model_parameter_id', models.AutoField(primary_key=True, serialize=False)),
                ('input_output', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.inputoutput')),
                ('parameter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.parameter')),
                ('training_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.trainingjob')),
            ],
            options={
                'db_table': 'model_parameter',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='limits',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.products'),
        ),
        migrations.CreateModel(
            name='EmployeeLocation',
            fields=[
                ('employee_location_id', models.AutoField(primary_key=True, serialize=False)),
                ('employee_location_name', models.TextField(blank=True, null=True)),
                ('employee_location_address_1', models.TextField(blank=True, null=True)),
                ('employee_location_address_2', models.TextField(blank=True, null=True)),
                ('employee_location_city', models.TextField(blank=True, null=True)),
                ('employee_location_state', models.TextField(blank=True, null=True)),
                ('employee_location_zip', models.TextField(blank=True, null=True)),
                ('venture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.venture')),
            ],
            options={
                'db_table': 'employee_location',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeeFunctionDetail',
            fields=[
                ('employee_function_detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('cloud_name', models.TextField(blank=True, null=True)),
                ('iam', models.TextField(blank=True, null=True)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.employeecontact')),
                ('employee_function', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.employeefunction')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.products')),
            ],
            options={
                'db_table': 'employee_function_detail',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='employeecontact',
            name='employee_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.employeelocation'),
        ),
        migrations.CreateModel(
            name='Drive',
            fields=[
                ('drive_id', models.AutoField(primary_key=True, serialize=False)),
                ('drive_name', models.TextField(blank=True, null=True)),
                ('venture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.venture')),
            ],
            options={
                'db_table': 'drive',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DocumentDetail',
            fields=[
                ('document_detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.document')),
                ('order_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.orderoption')),
            ],
            options={
                'db_table': 'document_detail',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='document',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.products'),
        ),
        migrations.CreateModel(
            name='DataSeed',
            fields=[
                ('data_seed_id', models.AutoField(primary_key=True, serialize=False)),
                ('data_seed_filename', models.TextField(blank=True, null=True)),
                ('show_seed', models.BooleanField(blank=True, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.products')),
            ],
            options={
                'db_table': 'data_seed',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='cover',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.products'),
        ),
        migrations.CreateModel(
            name='CompanyLocation',
            fields=[
                ('company_location_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_location_address_1', models.TextField(blank=True, null=True)),
                ('company_location_address_2', models.TextField(blank=True, null=True)),
                ('company_location_city', models.TextField(blank=True, null=True)),
                ('company_location_state', models.TextField(blank=True, null=True)),
                ('company_location_zip', models.TextField(blank=True, null=True)),
                ('company_mailing', models.BooleanField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.company')),
            ],
            options={
                'db_table': 'company_location',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CompanyContact',
            fields=[
                ('company_contact_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_contact_first', models.TextField(blank=True, null=True)),
                ('company_contact_last', models.TextField(blank=True, null=True)),
                ('company_contact_phone', models.TextField(blank=True, null=True)),
                ('company_contact_email', models.TextField(blank=True, null=True)),
                ('company_contact_title', models.TextField(blank=True, null=True)),
                ('company_contact_salutation', models.TextField(blank=True, null=True)),
                ('company_web', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.company')),
            ],
            options={
                'db_table': 'company_contact',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CompanyAlias',
            fields=[
                ('company_alias_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_alias_name', models.TextField(blank=True, null=True)),
                ('company_alias_retro_start', models.DateField(blank=True, null=True)),
                ('company_alias_retro_end', models.DateField(blank=True, null=True)),
                ('company_alias_eff_dte', models.DateField(blank=True, null=True)),
                ('company_alias_exp_dte', models.DateField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.company')),
            ],
            options={
                'db_table': 'company_alias',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BrokerLocation',
            fields=[
                ('broker_location_id', models.AutoField(primary_key=True, serialize=False)),
                ('broker_address_1', models.TextField(blank=True, null=True)),
                ('broker_address_2', models.TextField(blank=True, null=True)),
                ('broker_city', models.TextField(blank=True, null=True)),
                ('broker_state_id', models.IntegerField(blank=True, null=True)),
                ('broker_zip', models.TextField(blank=True, null=True)),
                ('broker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.broker')),
            ],
            options={
                'db_table': 'broker_location',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BrokerContact',
            fields=[
                ('broker_contact_id', models.AutoField(primary_key=True, serialize=False)),
                ('broker_first_name', models.TextField(blank=True, null=True)),
                ('broker_last_name', models.TextField(blank=True, null=True)),
                ('broker_email', models.TextField(blank=True, null=True)),
                ('broker_name_combined', models.TextField(blank=True, null=True)),
                ('broker_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.brokerlocation')),
            ],
            options={
                'db_table': 'broker_contact',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AttachmentLog',
            fields=[
                ('attachment_log_id', models.AutoField(primary_key=True, serialize=False)),
                ('document_name', models.TextField(blank=True, null=True)),
                ('document_timestamp', models.DateTimeField(blank=True, null=True)),
                ('document_path', models.TextField(blank=True, null=True)),
                ('attachment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.attachmenttype')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.orders')),
            ],
            options={
                'db_table': 'attachment_log',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AttachmentDetail',
            fields=[
                ('attachment_detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('attachment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.attachment')),
                ('attachment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.attachmenttype')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.products')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.task')),
            ],
            options={
                'db_table': 'attachment_detail',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='attachment',
            name='attachment_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.attachmenttype'),
        ),
        migrations.CreateModel(
            name='Applications',
            fields=[
                ('application_id', models.AutoField(primary_key=True, serialize=False)),
                ('application_name', models.TextField(blank=True, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.product')),
            ],
            options={
                'db_table': 'applications',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ApplicationResponse',
            fields=[
                ('application_response_id', models.AutoField(primary_key=True, serialize=False)),
                ('response', models.TextField(blank=True, null=True)),
                ('application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.applications')),
                ('application_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.applicationquestion')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.orders')),
            ],
            options={
                'db_table': 'application_response',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='applicationquestion',
            name='application',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.applications'),
        ),
        migrations.AddField(
            model_name='applicationquestion',
            name='parameter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.parameter'),
        ),
    ]
