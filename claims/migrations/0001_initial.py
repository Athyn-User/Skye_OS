# Generated by Django 5.2.6 on 2025-09-22 18:28

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('applications', '0006_add_billing_system'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claim_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('claim_type', models.CharField(choices=[('PROPERTY', 'Property Damage'), ('LIABILITY', 'General Liability'), ('AUTO', 'Auto'), ('PROFESSIONAL', 'Professional Liability'), ('WORKERS_COMP', 'Workers Compensation'), ('CYBER', 'Cyber Liability'), ('OTHER', 'Other')], max_length=20)),
                ('claim_status', models.CharField(choices=[('FNOL', 'First Notice of Loss'), ('ASSIGNED', 'Assigned to Adjuster'), ('INVESTIGATING', 'Under Investigation'), ('DOCUMENTING', 'Gathering Documentation'), ('REVIEWING', 'Under Review'), ('APPROVED', 'Approved'), ('DENIED', 'Denied'), ('SETTLED', 'Settled'), ('CLOSED', 'Closed'), ('REOPENED', 'Reopened')], default='FNOL', max_length=20)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CATASTROPHIC', 'Catastrophic')], default='MEDIUM', max_length=20)),
                ('claimant_name', models.CharField(max_length=200)),
                ('claimant_phone', models.CharField(max_length=20)),
                ('claimant_email', models.EmailField(max_length=254)),
                ('claimant_address', models.TextField()),
                ('is_insured', models.BooleanField(default=True)),
                ('date_of_loss', models.DateField()),
                ('time_of_loss', models.TimeField(blank=True, null=True)),
                ('location_of_loss', models.TextField()),
                ('loss_description', models.TextField()),
                ('cause_of_loss', models.CharField(max_length=200)),
                ('estimated_loss', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('deductible', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('reserve_amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('paid_amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('recovered_amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('assigned_date', models.DateTimeField(blank=True, null=True)),
                ('reported_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('settled_date', models.DateTimeField(blank=True, null=True)),
                ('closed_date', models.DateTimeField(blank=True, null=True)),
                ('reopened_date', models.DateTimeField(blank=True, null=True)),
                ('police_report_number', models.CharField(blank=True, max_length=50)),
                ('injuries_reported', models.BooleanField(default=False)),
                ('property_damage', models.BooleanField(default=False)),
                ('subrogation_possible', models.BooleanField(default=False)),
                ('litigation_pending', models.BooleanField(default=False)),
                ('internal_notes', models.TextField(blank=True)),
                ('denial_reason', models.TextField(blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('adjuster', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_claims', to=settings.AUTH_USER_MODEL)),
                ('certificate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='claims', to='applications.certificate')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_claims', to=settings.AUTH_USER_MODEL)),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='claims', to='applications.quote')),
            ],
            options={
                'ordering': ['-reported_date'],
            },
        ),
        migrations.CreateModel(
            name='ClaimDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('FNOL', 'First Notice of Loss'), ('POLICE_REPORT', 'Police Report'), ('MEDICAL_REPORT', 'Medical Report'), ('INVOICE', 'Invoice/Receipt'), ('ESTIMATE', 'Repair Estimate'), ('PHOTO', 'Photograph'), ('CORRESPONDENCE', 'Correspondence'), ('LEGAL', 'Legal Document'), ('INVESTIGATION', 'Investigation Report'), ('OTHER', 'Other')], max_length=20)),
                ('document_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to='claims/documents/%Y/%m/')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('claim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='claims.claim')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_date'],
            },
        ),
        migrations.CreateModel(
            name='ClaimNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('GENERAL', 'General Note'), ('PHONE', 'Phone Call'), ('EMAIL', 'Email'), ('MEETING', 'Meeting'), ('INVESTIGATION', 'Investigation'), ('LEGAL', 'Legal'), ('SETTLEMENT', 'Settlement'), ('INTERNAL', 'Internal')], default='GENERAL', max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('is_public', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('claim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='claims.claim')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='ClaimPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('INDEMNITY', 'Indemnity'), ('MEDICAL', 'Medical'), ('EXPENSE', 'Expense'), ('LEGAL', 'Legal Fees'), ('DEDUCTIBLE', 'Deductible'), ('RECOVERY', 'Recovery/Subrogation')], max_length=20)),
                ('payment_method', models.CharField(choices=[('CHECK', 'Check'), ('ACH', 'ACH Transfer'), ('WIRE', 'Wire Transfer'), ('CREDIT_CARD', 'Credit Card')], max_length=20)),
                ('payee_name', models.CharField(max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('check_number', models.CharField(blank=True, max_length=50)),
                ('payment_date', models.DateField()),
                ('cleared_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_payments', to=settings.AUTH_USER_MODEL)),
                ('claim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='claims.claim')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='ClaimReserve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reserve_type', models.CharField(choices=[('INITIAL', 'Initial Reserve'), ('ADJUSTMENT', 'Reserve Adjustment'), ('SUPPLEMENTAL', 'Supplemental Reserve')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('reason', models.TextField()),
                ('effective_date', models.DateField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('claim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reserves', to='claims.claim')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-effective_date', '-created_date'],
            },
        ),
        migrations.AddIndex(
            model_name='claim',
            index=models.Index(fields=['-reported_date'], name='claims_clai_reporte_2a7672_idx'),
        ),
        migrations.AddIndex(
            model_name='claim',
            index=models.Index(fields=['claim_status'], name='claims_clai_claim_s_6b0e62_idx'),
        ),
        migrations.AddIndex(
            model_name='claim',
            index=models.Index(fields=['adjuster'], name='claims_clai_adjuste_fc69ce_idx'),
        ),
    ]
