# Generated by Django 5.2.6 on 2025-09-26 16:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('applications', '0010_locationschedule_locationendorsement_policylocation_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalInsured',
            fields=[
                ('additional_insured_id', models.AutoField(primary_key=True, serialize=False)),
                ('ai_number', models.CharField(help_text='Unique identifier (e.g., AI-001)', max_length=10)),
                ('ai_type', models.CharField(choices=[('landlord', 'Landlord'), ('vendor', 'Vendor'), ('lender', 'Lender/Mortgagee'), ('general_contractor', 'General Contractor'), ('other', 'Other')], default='vendor', max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('address_line_1', models.CharField(max_length=200)),
                ('address_line_2', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('zip_code', models.CharField(max_length=10)),
                ('contact_name', models.CharField(blank=True, max_length=100)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('certificate_required', models.BooleanField(default=True)),
                ('certificate_frequency', models.CharField(choices=[('none', 'Not Required'), ('one_time', 'One-Time'), ('annual', 'Annual'), ('per_project', 'Per Project')], default='annual', max_length=20)),
                ('coverage_gl', models.BooleanField(default=False, verbose_name='General Liability')),
                ('coverage_auto', models.BooleanField(default=False, verbose_name='Auto Liability')),
                ('coverage_property', models.BooleanField(default=False, verbose_name='Property')),
                ('coverage_umbrella', models.BooleanField(default=False, verbose_name='Umbrella/Excess')),
                ('waiver_of_subrogation', models.BooleanField(default=False)),
                ('primary_non_contributory', models.BooleanField(default=False)),
                ('additional_requirements', models.TextField(blank=True)),
                ('effective_date', models.DateField()),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='additional_insureds_created', to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_insureds', to='applications.policy')),
            ],
            options={
                'ordering': ['ai_number'],
            },
        ),
        migrations.CreateModel(
            name='AdditionalInsuredCertificate',
            fields=[
                ('ai_certificate_id', models.AutoField(primary_key=True, serialize=False)),
                ('issued_date', models.DateField(auto_now_add=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('additional_insured', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='applications.additionalinsured')),
                ('certificate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_insured_cert', to='applications.certificate')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-issued_date'],
            },
        ),
        migrations.CreateModel(
            name='AdditionalInsuredSchedule',
            fields=[
                ('schedule_id', models.AutoField(primary_key=True, serialize=False)),
                ('schedule_name', models.CharField(max_length=200)),
                ('schedule_type', models.CharField(choices=[('all', 'All Additional Insureds'), ('by_type', 'By Type'), ('selected', 'Selected AIs'), ('certificate_required', 'Certificate Required Only')], default='all', max_length=30)),
                ('filter_types', models.CharField(blank=True, help_text='Comma-separated AI types', max_length=200)),
                ('total_ais', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('additional_insureds', models.ManyToManyField(related_name='schedules', to='applications.additionalinsured')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_schedules', to='applications.policy')),
            ],
            options={
                'ordering': ['schedule_name'],
            },
        ),
        migrations.AddIndex(
            model_name='additionalinsured',
            index=models.Index(fields=['policy', 'is_active'], name='application_policy__16751b_idx'),
        ),
        migrations.AddIndex(
            model_name='additionalinsured',
            index=models.Index(fields=['policy', 'ai_type'], name='application_policy__485cb7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='additionalinsured',
            unique_together={('policy', 'ai_number')},
        ),
        migrations.AlterUniqueTogether(
            name='additionalinsuredcertificate',
            unique_together={('additional_insured', 'certificate')},
        ),
    ]
