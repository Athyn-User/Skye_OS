# Generated by Django 5.2.6 on 2025-09-26 14:58

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('applications', '0009_add_document_management_models'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LocationSchedule',
            fields=[
                ('schedule_id', models.AutoField(primary_key=True, serialize=False)),
                ('schedule_name', models.CharField(help_text='Descriptive name for this schedule', max_length=200)),
                ('schedule_type', models.CharField(choices=[('all_locations', 'All Locations'), ('selected_locations', 'Selected Locations'), ('locations_by_state', 'Locations by State'), ('locations_by_occupancy', 'Locations by Occupancy'), ('custom', 'Custom Schedule')], max_length=30)),
                ('include_states', models.CharField(blank=True, help_text='Comma-separated state codes', max_length=200)),
                ('include_occupancies', models.CharField(blank=True, help_text='Comma-separated occupancy types', max_length=200)),
                ('min_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('max_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('show_building_limits', models.BooleanField(default=True)),
                ('show_contents_limits', models.BooleanField(default=True)),
                ('show_deductibles', models.BooleanField(default=False)),
                ('show_construction_details', models.BooleanField(default=False)),
                ('show_protection_features', models.BooleanField(default=False)),
                ('total_building_limit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_contents_limit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_locations', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_schedules', to='applications.policy')),
            ],
            options={
                'db_table': 'location_schedules',
                'ordering': ['schedule_name'],
            },
        ),
        migrations.CreateModel(
            name='LocationEndorsement',
            fields=[
                ('endorsement_id', models.AutoField(primary_key=True, serialize=False)),
                ('endorsement_number', models.CharField(max_length=50)),
                ('effective_date', models.DateField()),
                ('description', models.TextField(blank=True)),
                ('action_type', models.CharField(choices=[('add_locations', 'Add Locations'), ('remove_locations', 'Remove Locations'), ('modify_limits', 'Modify Limits'), ('update_schedule', 'Update Schedule')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('endorsement_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_endorsements', to='applications.endorsementdocument')),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.policy')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.locationschedule')),
            ],
            options={
                'db_table': 'location_endorsements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PolicyLocation',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('location_number', models.CharField(help_text='Location identifier (e.g., 001, 002)', max_length=10)),
                ('location_name', models.CharField(blank=True, help_text='Optional location name/description', max_length=200)),
                ('street_address', models.CharField(max_length=200)),
                ('address_line_2', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('zip_code', models.CharField(max_length=10)),
                ('county', models.CharField(blank=True, max_length=100)),
                ('building_limit', models.DecimalField(decimal_places=2, help_text='Building coverage limit', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('contents_limit', models.DecimalField(decimal_places=2, help_text='Contents coverage limit', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('construction_type', models.CharField(blank=True, choices=[('frame', 'Frame'), ('joisted_masonry', 'Joisted Masonry'), ('non_combustible', 'Non-Combustible'), ('masonry_non_combustible', 'Masonry Non-Combustible'), ('modified_fire_resistive', 'Modified Fire Resistive'), ('fire_resistive', 'Fire Resistive')], help_text='Building construction classification', max_length=30)),
                ('year_built', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1800), django.core.validators.MaxValueValidator(2030)])),
                ('square_footage', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('number_of_stories', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('basement', models.BooleanField(default=False)),
                ('primary_occupancy', models.CharField(blank=True, choices=[('office', 'Office'), ('retail', 'Retail'), ('warehouse', 'Warehouse'), ('manufacturing', 'Manufacturing'), ('restaurant', 'Restaurant'), ('apartment', 'Apartment'), ('mixed_use', 'Mixed Use'), ('other', 'Other')], max_length=30)),
                ('occupancy_description', models.TextField(blank=True, help_text='Detailed occupancy description')),
                ('business_income_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('extra_expense_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('building_deductible', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('contents_deductible', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('building_coinsurance', models.IntegerField(blank=True, help_text='Building coinsurance percentage', null=True, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(100)])),
                ('contents_coinsurance', models.IntegerField(blank=True, help_text='Contents coinsurance percentage', null=True, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(100)])),
                ('sprinkler_system', models.CharField(choices=[('none', 'No Sprinklers'), ('partial', 'Partial Sprinklers'), ('full_wet', 'Full Wet System'), ('full_dry', 'Full Dry System'), ('deluge', 'Deluge System')], default='none', max_length=20)),
                ('burglar_alarm', models.BooleanField(default=False)),
                ('fire_alarm', models.BooleanField(default=False)),
                ('security_guard', models.BooleanField(default=False)),
                ('flood_zone', models.CharField(blank=True, max_length=10)),
                ('earthquake_zone', models.CharField(blank=True, max_length=10)),
                ('environmental_hazards', models.TextField(blank=True)),
                ('special_conditions', models.TextField(blank=True, help_text='Special underwriting conditions')),
                ('is_active', models.BooleanField(default=True)),
                ('effective_date', models.DateField(help_text='Date location became effective')),
                ('termination_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='applications.policy')),
            ],
            options={
                'db_table': 'policy_locations',
                'ordering': ['location_number'],
            },
        ),
        migrations.CreateModel(
            name='LocationScheduleItem',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('sequence_order', models.IntegerField(help_text='Order within the schedule')),
                ('display_name', models.CharField(blank=True, help_text='Override location description', max_length=200)),
                ('notes', models.TextField(blank=True, help_text='Special notes for this item in schedule')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='applications.locationschedule')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.policylocation')),
            ],
            options={
                'db_table': 'location_schedule_items',
                'ordering': ['sequence_order'],
            },
        ),
        migrations.AddIndex(
            model_name='policylocation',
            index=models.Index(fields=['policy', 'location_number'], name='policy_loca_policy__cdd71f_idx'),
        ),
        migrations.AddIndex(
            model_name='policylocation',
            index=models.Index(fields=['policy', 'is_active'], name='policy_loca_policy__b2aca6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='policylocation',
            unique_together={('policy', 'location_number')},
        ),
        migrations.AlterUniqueTogether(
            name='locationscheduleitem',
            unique_together={('schedule', 'location')},
        ),
    ]
